from typing import List, Tuple

class Board:
    sockets: List[int]  # Assuming int_fast8_t maps to Python's int
    tuzdeks: List[int]
    kaznas: List[int]

    def __init__(self) -> None: ...
    def __init__(self, inSocket: List[int], inTuzdek: List[int], inKaznas: List[int]) -> None: ...
    def getSumOfOtausOfPlayer(self, p: bool) -> int: ...
    def getNumOfOddCells(self, p: bool) -> int: ...
    def getNumOfEvenCells(self, p: bool) -> int: ...
    def heurestic1(self, p: bool) -> float: ...
    def playSocket(self, s: int) -> int: ...
    def isMovePossible(self, p: bool) -> bool: ...
    def atsyrauFunction(self, p: bool) -> int: ...
    def tuzdekPossible(self, s: int, player: bool) -> bool: ...
    def accountSocket(self, s: int, player: bool) -> None: ...
    def pli(self, s: int, tuzdek: bool, player: bool) -> None: ...
    def rotate(self) -> 'Board': ...
    @staticmethod
    def idx(s: int) -> int: ...
    def makeMove(self, s: int, player: bool) -> None: ...
    def toString(self) -> str: ...

class MinimaxH:
    weights: List[float]

    def __int__(self, weights:List[float]) -> None:...
    def minimaxWithABWithHeuristics(self, board: Board, depth: int, alpha: float, beta: float, player: bool, move: int) -> Tuple[float, int]: ...
    def heuristic1(self, board: Board, player: bool) -> float: ...
